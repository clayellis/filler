import Foundation

public enum Tile: Int, CaseIterable, Codable, Equatable, Identifiable {
    case red
    case orange
    case yellow
    case green
    case blue
    case purple

    public var id: Self { self }
}

extension Tile {
    public static let 游린: Self = .red
    public static let 游릲: Self = .orange
    public static let 游릳: Self = .yellow
    public static let 游릴: Self = .green
    public static let 游릱: Self = .blue
    public static let 游릵: Self = .purple
}

#if DEBUG
extension Tile: CustomDebugStringConvertible {
    public var debugDescription: String {
        switch self {
        case .red:
            return "游린"
        case .orange:
            return "游릲"
        case .yellow:
            return "游릳"
        case .green:
            return "游릴"
        case .blue:
            return "游릱"
        case .purple:
            return "游릵"
        }
    }

    public var swiftDescription: String {
        switch self {
        case .red:
            return ".red"
        case .orange:
            return ".orange"
        case .yellow:
            return ".yellow"
        case .green:
            return ".green"
        case .blue:
            return ".blue"
        case .purple:
            return ".purple"
        }
    }
}
#endif
